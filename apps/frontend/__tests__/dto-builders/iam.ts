import { DtoBuilder, UserId } from '@lib/shared';
import { ISignedInUserDto } from '@fe/iam';

export class SignedInUserDtoBuilder extends DtoBuilder<ISignedInUserDto> {
  protected getRequiredKeysMap(): Record<keyof ISignedInUserDto, boolean> {
    return {
      id: true,
      email: true,
      firstName: true,
      lastName: true,
      accessToken: true,
    };
  }

  static prefilled(): SignedInUserDtoBuilder {
    return new SignedInUserDtoBuilder()
      .havingId('autogenerated')
      .named('Oskar', 'Kupski')
      .havingEmail('s20506@pjwstk.edu.pl')
      .withAccessToken('dummy-access-token');
  }

  havingId(id: UserId | 'autogenerated'): this {
    return this.withProperty(
      'id',
      id === 'autogenerated' ? this.autoGeneratedId('user-') : id
    );
  }

  named(firstName: string, lastName: string): this {
    return this.withProperty('firstName', firstName).withProperty(
      'lastName',
      lastName
    );
  }

  havingEmail(email: string): this {
    return this.withProperty('email', email);
  }

  withAccessToken(accessToken: string): this {
    return this.withProperty('accessToken', accessToken);
  }
}
