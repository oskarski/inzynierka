import { DtoBuilder } from './dto-builder';
import { IReviewListItemDto, ReviewId } from '../types/reviews';
import { UserId } from '../types/iam';
import { RecipeId } from '../types';

export class ReviewListItemDtoBuilder extends DtoBuilder<IReviewListItemDto> {
  protected getRequiredKeysMap(): Record<keyof IReviewListItemDto, boolean> {
    return {
      id: true,
      user_id: true,
      recipe_id: true,
      created_at: true,
      review_value: true,
    };
  }

  static empty(): ReviewListItemDtoBuilder {
    return new ReviewListItemDtoBuilder();
  }

  static prefilled(): ReviewListItemDtoBuilder {
    return ReviewListItemDtoBuilder.empty()
      .havingId('autogenerated')
      .withUserId({ __type: Symbol() } as UserId) // Change the value to match the UserId type
      .withRecipeId({ __type: Symbol() } as RecipeId) // Change the value to match the RecipeId type
      .createdOn(new Date())
      .withReviewValue(5);
  }

  havingId(id: ReviewId | 'autogenerated'): this {
    return this.withProperty(
      'id',
      id === 'autogenerated' ? this.autoGeneratedId('review-') : id
    );
  }

  withUserId(userId: UserId): this {
    return this.withProperty('user_id', userId);
  }

  withRecipeId(recipeId: RecipeId): this {
    return this.withProperty('recipe_id', recipeId);
  }

  createdOn(createdAt: Date): this {
    return this.withProperty('created_at', createdAt);
  }

  withReviewValue(reviewValue: number): this {
    return this.withProperty('review_value', reviewValue);
  }
}
